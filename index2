<!doctype html>
<html lang="en">	
  <head>
    <meta charset="utf-8">
    <title>Reveal.js 3 Slide Demo</title>
    <link rel="stylesheet" href="css/reveal.css">
    <link rel="stylesheet" href="css/theme/sky.css" id="theme">
    <link rel="stylesheet" href="css/custom.css">
    <link rel="stylesheet" href="css/TangleKit/TangleKit.css" type="text/css">
    <!-- Theme used for syntax highlighting of code -->
    <link rel="stylesheet" href="lib/css/zenburn.css">

    <!--Add support for earlier versions of Internet Explorer -->
    <!--[if lt IE 9]>
	<script src="lib/js/html5shiv.js"></script>
	<![endif]-->
  </head>

  <body>
    <!-- Wrap the entire slide show in a div using the "reveal" class. -->
    <div class="reveal">
      <!-- Wrap all slides in a single "slides" class -->
      <div class="slides">

	<!-- ALL SLIDES GO HERE -->
	<!-- Each section element contains an individual slide -->
	
        <section data-background="art/ElephantEmptySpacesWithLowAlpha0.2.png">
	  <h1>Taming the <b>big elephant</b> in the room</h1>
	</section>

	<section>
	  <img src="art/ElephantEmptySpacesWithFeather.png" class="nostyle"/>
	  <!-- People have a lot of question/puzzles/misconceptions related to it... -->
	  <!-- No matter who you are and what your experience is with big data... I am sure you have something to gain from the workshop -->
	  <!-- We'll be answering these questions... as we go on... -->
	  <!-- Dividing this into 2 parts - first half is mainly covering a lot of ground and context of where we are in the space, what does the landscape looks like, some super important concepts... -->
	  <!-- Second half will be more hands on where we'll actually write some code and see some of the concepts in action... -->
	  <!-- Is it RDBMS? -->
	  <!-- Do I need supercomputers? -->
	  <!-- Do we need big data? -->
	  <aside class="notes">Talk about structure of presentation - 2 parts</aside>
	</section>

	<section class="stack">
	  <section class="what_is_big_data" >
	    What is <b>Big Data</b>?<br/><br/>
	    <div class="fragment">Its story of 3 V's...</div>
	    <ul>
	      <li class="fragment">Volume</li>
	      <li class="fragment">Variety</li>
	      <li class="fragment">Velocity</li>
	    </ul>
	    <p class="fragment" fragment-data-state="too_abstract">
	      <img src="art/abstract_elphant.jpg" style="position:absolute;opacity:0.1;top:-113%;width:250%;max-width:none;max-height:none;left:-75%" />
	      Too abstract? Lets take an example!
	    </p>
	  </section>
	  <section>
	    <p>How <b>Big</b> is big?</p>
	  </section>
	  <section>
	    Count number of cats in all my image collection
	    <img src="art/CatOrDogWithCleanBackground.png" class="nostyle"/>
	    <div class="fragment">Check each image if its a <a href="./catOrNot.html" target="_blank">Cat or not?</a></div>
	    <div class="fragment">Find number of all images that had cats in them</div>
	  </section>
	  <section id="loop_in_memory">
	    <svg height="100px" width="30%">
	      <rect x="0" y="0" width="95%" height="95%" style="fill:rgba(0,0,255,0.2)" rx="10px"></rect>
	      <rect x="1%" y="2%" width="95%" height="95%" style="fill:rgba(0,0,255,0.2)" rx="10px"></rect>
	      <rect x="2%" y="4%" width="95%" height="95%" style="fill:rgba(0,0,255,0.2)" rx="10px"></rect>
	      <text x="50%" y="25%" text-anchor="middle" font-size="70%">My image collection</text>	
	      <text x="50%" y="65%" text-anchor="middle" font-size="70%">Has 6 images</text>
  	      <rect x="8%" y="70%" width="10%" height="20%" style="fill:rgba(0,0,0,0.3);" rx="10px"/>
	      <rect x="23%" y="70%" width="10%" height="20%" style="fill:rgba(0,0,0,0.3);" rx="10px"/>
	      <rect x="37%" y="70%" width="10%" height="20%" style="fill:rgba(0,0,0,0.3);" rx="10px"/>
	      <rect x="53%" y="70%" width="10%" height="20%" style="fill:rgba(0,0,0,0.3);" rx="10px"/>
	      <rect x="70%" y="70%" width="10%" height="20%" style="fill:rgba(0,0,0,0.3);" rx="10px"/>
	      <rect x="83%" y="70%" width="10%" height="20%" style="fill:rgba(0,0,0,0.3);" rx="10px"/>

	      <image xlink:href="art/catWithBackgroundRemoved.png" x="8%" y="70%" width="10%" height="20%"/>
	      <image xlink:href="art/notACat.png" x="23%" y="70%" width="10%" height="20%"/>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="37%" y="70%" width="10%" height="20%"/>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="53%" y="70%" width="10%" height="20%"/>
	      <image xlink:href="art/notACat.png" x="70%" y="70%" width="10%" height="20%"/>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="83%" y="70%" width="10%" height="20%"/>
	    </svg>

	    <br/>

	    <p> Lets put these in memory </p>

	    <svg class="fragment" width="50%" height="50%">
	      <rect x="" y="0" width="100%" height="100%" style="fill:rgb(191,191,191);" rx="10px"/>
	      <rect x="8%" y="40%" width="10%" height="25%" style="fill:rgba(0,0,0,0.3);"/>
	      <rect x="23%" y="40%" width="10%" height="25%" style="fill:rgba(0,0,0,0.3);"/>
	      <rect x="37%" y="40%" width="10%" height="25%" style="fill:rgba(0,0,0,0.3);"/>
	      <rect x="53%" y="40%" width="10%" height="25%" style="fill:rgba(0,0,0,0.3);"/>
	      <rect x="67%" y="40%" width="10%" height="25%" style="fill:rgba(0,0,0,0.3);"/>
	      <rect x="83%" y="40%" width="10%" height="25%" style="fill:rgba(0,0,0,0.3);"/>
	      <text x="78%" y = "90%" font-size="70%">Memory</text>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="8%" y="42%" width="10%" height="20%"/>
	      <image xlink:href="art/notACat.png" x="23%" y="42%" width="10%" height="20%"/>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="37%" y="42%" width="10%" height="20%"/>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="53%" y="42%" width="10%" height="20%"/>
	      <image xlink:href="art/notACat.png" x="67%" y="42%" width="10%" height="20%"/>
	      <image xlink:href="art/catWithBackgroundRemoved.png" x="83%" y="42%" width="10%" height="20%"/>
	      
	    </svg>
	  </section>
	  <section>
	    Sounds simple but depends upon my collection...
	  </section>
	  <section id="store_in_a_mac">
	    <div class="change_number_of_images">
	      <p>Having <span data-var="numberOfImages" class="TKAdjustableNumber" data-min="1" data-max="100000" data-step="500"> <span data-var="description"></span></span>, takes <span data-var="totalSize"></span> <span data-var="dataUnits"></span>.</p>
	      <p>We loop over each and find if it has a cat..</p>
	      <i><span data-var="tooMuchMessage"></span></i>
	    </div>
	    <svg width="400" height="300">
	      <rect x = "50" y = "50" width="250" height="156" style="fill:rgb(191,191,191);stroke-width:5;stroke:rgb(0,0,0);" rx="15" />
	      <rect x = "25" y = "208" width="300" height="15" style="fill:rgb(127,127,127);" />
	      <rect x = "30" y = "223" width="290" height="5" style="fill:rgb(170,170,170);" />
	      <rect x = "170" y = "210" width="25" height="3" style="fill:rgb(255,255,255);" />
	      <rect x = "275" y = "214" width="25" height="3" style="fill:rgb(0,0,0);" />
	      <rect class="imageSize" x = "55" y = "55" width="240" height="146" style="fill:rgb(255,0,0);" rx="15"/>
	      <text class ="spaceLeft" x = "150" y = "110">  </text>
	      <image xlink:href="art/appleBackgroundRemoved.png" x="155" y="150" height="50px" width="50px"/>
	      <text x = "100" y = "145"> space left </text>	      
	    </svg>
	  </section>

	  <section id="scale_up_limit">
	    Now we can scale up... 
	    <div class="change_number_of_images">
	      <p>Having <span data-var="numberOfImages" class="TKAdjustableNumber" data-min="1" data-max="1000000" data-step="1000"> <span data-var="description"></span></span>, takes <span data-var="totalSize"></span> <span data-var="dataUnits"></span>.</p>
	      <i><span data-var="tooMuchMessage"></span></i>
	    </div>
		    
	    <svg width = "400" height = "300">
	      <rect class="laptopSize" x = "50" y = "50" width="250" height="156" style="fill:rgb(191,191,191);stroke-width:5;stroke:rgb(0,0,0);" rx="15"/>
	      <rect class="imageSize" x = "55" y = "55" width="240" height="146" style="fill:rgb(255,0,0);" rx="15"/>
	      <text x = "100" y = "145" font-size="20"> </text>
	      <image xlink:href="art/appleBackgroundRemoved.png" class="appleLogo" x="155" y="150" height="50px" width="50px"/>	      
	    </svg>
	  </section>

	  <section id="costs_of_scaling_up">
	    Why scaling up doesn't work anymore...
	  </section>

	  <section>
	    Or we can scale out :)
	    But there are problems... reduncacy.. fault tolerance..
	    (Can we paralleize reduce?)
	  </section>

	  <section>
	    Welcome to hadoop...
	  </section>	  
	  
	</section>

	<section id="scale_out_with_map_reduce">

	  <section>
	    Scaling out with map-reduce...
	  </section>

	  <section>
	    <br/> Lets try a word count
	    <pre class="nostyle">
	      var sentences = ['there are some some repeated words in this this sentence']
	      var words = []
	      for(i = 0; i< sentences.length; i++){
		 words = words.concat(sentences[i].split(" "))
	      }
	      var wordFrequencies = {}
	      for(i = 0; i < words.length; i++){
	         if(wordFrequencies[words[i]]) {
		     wordFrequencies[words[i]] += 1
		 } else {
		     wordFrequencies[words[i]] = 1
		}
	     } <div class="fragment green">
	     Output:
	     wordFrequencies {
		there : 1, are : 1, some : 2, repeated : 1,
	        words : 1, in : 1, this : 2, sentence : 1
	     } </div>  <div class ="fragment red">
	     Can we get rid of counter and state?
	    </div>
	    </pre>
	  </section>

	  <section id="word_count_better">
	    <br/> Lets try a word count
	    <pre class="nostyle">
	      var sentences = ['there are some some repeated words in this this sentence']
	      sentences
	         .map(function(sentence){return sentence.split(" ")})
	         .flatten()
	         .reduce(function(dictionarySoFar,current){
	             dictionarySoFar[current] = (dictionarySoFar[current]||0) + 1
       	             return dictionarySoFar;
	         },{})
	     } <div class="fragment green">
	     Output:
	     wordFrequencies {
		there : 1, are : 1, some : 2, repeated : 1,
	        words : 1, in : 1, this : 2, sentence : 1
	     } </div>  
	    </pre>
	  </section>

	  
	</section>

	<section id="spark_comes_to_rescue">
	  Spark comes to rescue...<br/>
	  <svg width="80%" height="400px">
	    <image xlink:href="art/sparkTrendWithNoBackground.png" x="0%" y="0%" height="100%" width="100%"/>	    
	    <circle class="2009" cx="9%" cy="70%" r="10" style="fill:rgb(0,0,255);"/>
	    <text x="9%" y="80%" text-anchor="middle" dy=".3em" font-size="20">2009</text>
	    <text x="9%" y="85%" text-anchor="middle" dy=".3em" font-size="20">Created by</text>	    
	    <text x="9%" y="91%" text-anchor="middle" dy=".3em" font-size="20">Matei Zaharia</text>	    
	    <circle class="2010" cx="24%" cy="70%" r="10" style="fill:rgb(0,0,255);"/>
	    <text x="24%" y="80%" text-anchor="middle" dy=".3em" font-size="20">2010</text>
	    <text x="24%" y="85%" text-anchor="middle" dy=".3em" font-size="20">Open</text>
	    <text x="24%" y="91%" text-anchor="middle" dy=".3em" font-size="20">Sourced</text>
	    <circle class="2013" cx="42%" cy="70%" r="10" style="fill:rgb(0,0,255);"/>
	    <text x="42%" y="80%" text-anchor="middle" dy=".3em" font-size="20">2013</text>
	    <text x="42%" y="85%" text-anchor="middle" dy=".3em" font-size="20">Becomes</text>
	    <text x="42%" y="91%" text-anchor="middle" dy=".3em" font-size="20">Apache Project</text>
	    <circle class="2014" cx="61%" cy="70%" r="13" style="fill:rgb(0,0,255);"/>
	    <text x="61%" y="80%" text-anchor="middle" dy=".3em" font-size="20">2014</text>
	    <text x="61%" y="85%" text-anchor="middle" dy=".3em" font-size="20">100 TB sort</text>
	    <text x="61%" y="91%" text-anchor="middle" dy=".3em" font-size="20">23 minutes</text>
	    <circle class="2015" cx="78%" cy="70%" r="16" style="fill:rgb(0,0,255);"/>
	    <text x="78%" y="80%" text-anchor="middle" dy=".3em" font-size="20">2015</text>
	    <text x="78%" y="85%" text-anchor="middle" dy=".3em" font-size="20">Dataframes</text>
	    <text x="78%" y="91%" text-anchor="middle" dy=".3em" font-size="20">Support</text>
	    <circle class="2016" cx="94%" cy="70%" r="19" style="fill:rgb(0,0,255);"/>
	    <text x="94%" y="80%" text-anchor="middle" dy=".3em" font-size="20">2016</text>
	    <text x="94%" y="85%" text-anchor="middle" dy=".3em" font-size="20">Datasets</text>
	    <text x="94%" y="91%" text-anchor="middle" dy=".3em" font-size="20">Support</text>
	  </svg>
	  <!-- <img class="nostyle" src="art/sparkTrendWithNoBackground.png"/> -->
	</section>

	<section>
	  <h2>Pretty Code</h2>
	  <pre><code class="hljs" data-trim contenteditable>
function linkify( selector ) {
  if( supports3DTransforms ) {

    var nodes = document.querySelectorAll( selector );

    for( var i = 0, len = nodes.length; i &lt; len; i++ ) {
      var node = nodes[i];

      if( !node.className ) {
        node.className += ' roll';
      }
    }
  }
}
	  </code></pre>
	  <p>Code syntax highlighting courtesy of <a href="http://softwaremaniacs.org/soft/highlight/en/description/">highlight.js</a>.</p>
	</section>
	
	  

      </div>
    </div>
    <script src="lib/js/head.min.js"></script>
    <script src="js/reveal.js"></script>
    <script src="js/jquery-3.1.1.min.js"></script>
    <script type="text/javascript" src="js/storeInAMac.js"></script>
    <script type="text/javascript" src="js/reveal_states.js"></script>
    <script type="text/javascript" src="js/scaleUp.js"></script>
    <script type="text/javascript" src="js/TangleKit/tangle.js"></script>
    <script type="text/javascript" src="js/TangleKit/mootools.js"></script>
    <script type="text/javascript" src="js/TangleKit/sprintf.js"></script>
    <script type="text/javascript" src="js/TangleKit/BVTouchable.js"></script>
    <script type="text/javascript" src="js/TangleKit/TangleKit.js"></script>
    <script>
      // Required, even if empty.
      Reveal.initialize({
      controls: true,
      progress: true,
      history: true,
      center: true,
      slideNumber : true,
      keyboard: true,
      rollingLinks: true,
      history:true,
      transition: 'concave',

      // More info https://github.com/hakimel/reveal.js#dependencies
      dependencies: [
      { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
      { src: 'plugin/zoom-js/zoom.js', async: true },
      { src: 'plugin/notes/notes.js', async: true }
      ]
      });
    </script>
  </body>
</html>
